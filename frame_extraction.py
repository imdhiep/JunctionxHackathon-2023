# -*- coding: utf-8 -*-
"""frame_extraction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uyNNZ8Fq3HozkriwCOBhnLbwuoLcIcrW
"""

!command -v ffmpeg >/dev/null || (apt update && apt install -y ffmpeg)
!pip install -q mediapy

import itertools
import math
import warnings

import cv2
import mediapy as media
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image
from google.colab.patches import cv2_imshow

"""Only if you want to save frames from video"""

!apt-get update
!apt-get install ffmpeg libav-tools x264 x265 bc
!apt-get install mediainfo
!pip install ffmpeg
!apt-get install mp4v2-utils
!apt-get install jq
!apt-get install bc

!add-apt-repository ppa:savoury1/ffmpeg4
!apt-get update
!apt-get install ffmpeg
!ffmpeg -version
!apt-get install mp4v2-utils

import cv2
import os

"""MODULE CHỨC NĂNG"""

from google.colab import drive
drive.mount('/content/drive')

""" Display image from a video"""

# Specify video file path
video_path = "/content/drive/MyDrive/junction/192_168_5_104.mp4"

# Create video capture object
cap = cv2.VideoCapture(video_path)

# List to store all frames of the video
frames = []
lst = []
# Loop through all frames and append them to the list
while True:
    ret, frame = cap.read()
    if not ret:
        break
    frames.append(frame)
    lst.append(frame)

# Release capture object
cap.release()

# Loop through the list of frames and display each one
for i, frame in enumerate(frames):
  frame = cv2.resize(frame, (320, 240))
  cv2_imshow( frame)
    
  cv2.destroyAllWindows()

lst

"""Display video from a list of matrix"""

media.show_video(lst, fps=5, width = 480, height = 360)

working_folder = 'junction'

# Commented out IPython magic to ensure Python compatibility.
import os
import sys
if 'google.colab' in str(get_ipython()):
  print('Running on CoLab')
  root_dir='/content/drive/My Drive/' + working_folder
  if os.path.isdir(root_dir):
#     %cd $root_dir
  else:
    print('Check your working_folder or if Google drive is mounted')
    sys.exit()
  sys.path.append(root_dir)  
  print('Colab code has been executed')
else:
  print('Not running on Colab')

import os
import cv2

# Read the videos from specified path
for filename in os.listdir('/content/drive/MyDrive/junction'):
    if filename.endswith('.mp4'):
        print(filename)
        folder = filename[:-4]
        print(folder)
        cam = cv2.VideoCapture(f"/content/drive/MyDrive/junction/{filename}")

        try:
            # creating a folder named data
            if not os.path.exists(folder):
                os.makedirs(folder)

        # if not created then raise error
        except OSError:
            print(f'Error: Creating directory of {folder}')

        # frame
        currentframe = 0
        
        while True:
            ret, frame = cam.read()
            if not ret:
                break

            if ret:
                # if video is still left continue creating images
                name = f'{folder}/{folder}_' + str(currentframe) + '.jpg'
                print(f'Creating... {name}')
                
                # writing the extracted images
                cv2.imwrite(name, frame)

                # show how many frames are created
                currentframe += 1

            else:
                break

        # Release all space and windows once done
        cam.release()
        cv2.destroyAllWindows()

from PIL import Image, ImageDraw

# Create a new blank image
img = Image.new('RGB', (1280, 720), color='white')

# Draw the polygon on the image
draw = ImageDraw.Draw(img)
points = [(975,247),(753,288),(606,321),(423,373),(345,396),(231,420),(114,454),(42,468),(12,522),(21,573),(12,641),(27,731),(18,756),(27,828),(30,877),(147,886),(456,819),(765,751),(1134,652),(1266,585),(1332,501),(1221,351),(1185,299)]
draw.polygon(points, fill=None, outline='black')

# Display or save the image
img.show()

""" BẮT ĐẦU DÁN NHÃN"""

data_link = '/content/drive/MyDrive/junction/Public_Test/scene3cam_02/CAM_1.txt'

true_folder = 'junction/Public_Test/scene3cam_02/CAM_1.txt'
video_link = "junction/Public_Test/videos/scene3cam_02/CAM_1.mp4"

sys.exit('Unable to open %s' % reference)

# Commented out IPython magic to ensure Python compatibility.
import os
import sys
if 'google.colab' in str(get_ipython()):
  print('Running on CoLab')
  root_dir='/content/drive/My Drive/' + true_folder
  if os.path.isdir(root_dir):
#     %cd $root_dir
  else:
    print('Check your working_folder or if Google drive is mounted')
    sys.exit()
  sys.path.append(root_dir)  
  print('Colab code has been executed')
else:
  print('Not running on Colab')

import os
import cv2

# Read the videos from specified path
for filename in os.listdir('/content/drive/MyDrive/junction'):
    if filename.endswith('.mp4'):
        print(filename)
        folder = filename[:-4]
        print(folder)
        cam = cv2.VideoCapture(f"/content/drive/MyDrive/junction/{filename}")

        try:
            # creating a folder named data
            if not os.path.exists(folder):
                os.makedirs(folder)

        # if not created then raise error
        except OSError:
            print(f'Error: Creating directory of {folder}')

        # frame
        currentframe = 0
        
        while True:
            ret, frame = cam.read()
            if not ret:
                break

            if ret:
                # if video is still left continue creating images
                name = f'{folder}/{folder}_' + str(currentframe) + '.jpg'
                print(f'Creating... {name}')
                
                # writing the extracted images
                cv2.imwrite(name, frame)

                # show how many frames are created
                currentframe += 1

            else:
                break

        # Release all space and windows once done
        cam.release()
        cv2.destroyAllWindows()

